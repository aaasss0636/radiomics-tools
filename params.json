{
  "name": "Radiomics tools",
  "tagline": "Image processing tools for radiomics analysis",
  "body": "Radiomics tools\r\n===================\r\n[![Build Status](https://travis-ci.org/taznux/radiomics-tools.svg?branch=master)](https://travis-ci.org/taznux/radiomics-tools) [![codecov](https://codecov.io/gh/taznux/radiomics-tools/branch/master/graph/badge.svg)](https://codecov.io/gh/taznux/radiomics-tools) [![Stories in Ready](https://badge.waffle.io/taznux/radiomics-tools.svg?label=ready&title=Ready)](http://waffle.io/taznux/radiomics-tools)\r\n\r\nImage processing tools and ruffus based pipeline for radiomics feature analysis\r\n\r\nSuper build\r\n--------------------------\r\nJust run super-build.sh\r\n\r\n\r\nInstall software\r\n--------------------------\r\n\r\n### Python 3.5 ###\r\n  - Required\r\n  - Script engine and useful modules\r\n\r\n  http://conda.pydata.org/miniconda.html - !recommend!  \r\n  https://www.python.org/downloads/\r\n\r\n  > Required modules - pandas, ruffus, SimpleITK, scipy, numpy, ipython, matplotlib\r\n  > install_modules.sh or install_modules.cmd is available to install these modules using conda.\r\n\r\n### Slicer 4.5 ###\r\n  - Recommended  \r\n  - Image viewer, contour editor, simple image processing tool  \r\n\r\n  http://download.slicer.org/\r\n\r\n\r\n### Build  ###\r\n  - gcc or visual studio\r\n  - cmake\r\n  - ITK\r\n\r\n  > ./build.sh\r\n\r\n\r\nTools\r\n-----\r\n### 1. DICOMTools ###\r\n1. DICOMTagReader - Display entire DICOM tags\r\n  > DICOMTagReader [DICOM directory]\r\n\r\n2. DICOM2NRRDConverter - DICOM to nrrd (Slicer file format)  \r\n  Simple recursive converting for single patient data  \r\n  > DICOM2NRRDConverter [DICOM directory] [nrrd directory]  \r\n\r\n  For large data  \r\n  > python DICOM2NRRDConverter.py [DICOM directory] [nrrd directory]\r\n\r\n3. DICOM-RT2NRRDConverter - DICOM-RT to nrrd\r\n\r\n\r\n### 2. ContourTools ###\r\n1. STAPLEComparison - variation comparison on multiple contours\r\n1. ExtractBoundary\r\n1. GTVs2ITV\r\n1. HoleGenerator\r\n1. ROIGenerator\r\n1. ROI2BinImage\r\n1. ROICropImage\r\n\r\n\r\n\r\n### 3. GrowCutSegmentation ###\r\n  NoduleSegmentation - Segment small nodular objects for solid nodule and GGO\r\n  > NoduleSegmentation [InputImageFile] [SeedPoint_x] [SeedPoint_y [SeedPoint_z] [NoduleSize_long] [NoduleSize_short] [OutputImageFile]  \r\n\r\n\r\n### 4. Feature Extraction ###\r\n  FeatureExtraction - Extract image features from the nodule segmentation\r\n  > FeatureExtraction [InputImage] [LabelImage] [FeatureFile] [Label={1}]\r\n\r\n\r\n### 5. Python Tools ###\r\n  1. metadata.py - for handling metadata in csv or xls\r\n  2. organize_features.py - for collecting feature data into a single csv file\r\n\r\n\r\n### 6. MATLAB Tools ###\r\n  1. NRRD4Matlab - for handing nrrd format in MATLAB\r\n  2. PET2SUV - for converting raw PET image to standardized uptake value(SUV)\r\n\r\n\r\n### 7. ETC ###\r\n  1. RegistrationSITK - simple registration code, required SimpleITK module for python\r\n  2. SlicerPythonExtensions - simple extensions for Slicer\r\n    1. InterpolateROIsEffect.py\r\n    2. LineProfile.py\r\n\r\n\r\n### 6. LASSO-SVM ###\r\n  TBD - modeling code for radiomics features\r\n\r\n\r\nUsage\r\n-----\r\nRadiomics feature extraction pipeline example for LUNGx dataset\r\n\r\n1. Download DICOM images  \r\n  https://wiki.cancerimagingarchive.net/display/Public/SPIE-AAPM+Lung+CT+Challenge  \r\n\r\n  Download all DICOM images to 'DATA'  \r\n  You can use the included metadata files for LUNGx (TrainingSet.csv and TestSet.csv)  \r\n\r\n2. Environmental parameters  \r\n  Set your parameters in script/run_lungx.py (recommend default setting).  \r\n  > experiment_set = 'TrainingSet'  \r\n  > \\# experiment_set = 'TestSet'  \r\n  > output_path = 'output'  \r\n  > data_path = 'DATA'  \r\n  > dicom_path = data_path + '/DOI'  \r\n  > image_path = data_path + '/' + experiment_set  \r\n  > nodule_info_path = './' + experiment_set + '.csv'  \r\n\r\n3. Run radiomics pipeline\r\n  > $ python script/run_lungx.py or script/run_lungx.py\r\n\r\n4. Analysis feature data\r\n  output files (intermediate images and feature data) will be generated in output  \r\n  > TrainingSet              feature_list_TrainingSet.csv\r\n  > TestSet                  feature_list_TestSet.csv\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}